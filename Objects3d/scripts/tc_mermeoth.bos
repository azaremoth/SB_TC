// based on Argh's PD TriRook Script

#include "basic_spring_stuff.h"

piece base, body, turret_base, turret, sleeve, front_point, rear_point, left_point, right_point, emit_gun, emit_groundflash;

static-var OverWater;
static-var WaterDepth;

#define	SIG_AIM1			2
#define MERMEOTH_FLARE		1024+0
#define HOVER_WATERCLOUD	1025+0
#define GROUNDFLASH			1026+0
#define BOOM				1027+0

lua_CreateLightMe(arg) { return (0); }
lua_DestroyLightMe(arg) { return (0); }


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Upanddown()
{
	while( TRUE )
	{
	move body to y-axis [2] speed [2];
	wait-for-move body along y-axis;
	move body to y-axis [3] speed [1.5];
	wait-for-move body along y-axis;
	move body to y-axis [2] speed [1.5];
	wait-for-move body along y-axis;
	move body to y-axis [0] speed [2];
	wait-for-move body along y-axis;
	}
}

CheckWaterDepth()
{
	while(TRUE)
	{
	WaterDepth = get GROUND_HEIGHT(get PIECE_XZ(base));
   		If( WaterDepth != 0 )
   		{
   			OverWater = 0;
   		}
   		If( WaterDepth == 0 )
   		{
   			OverWater = 1;
   		}
   		sleep 500;
   	}
   	return(0);
}

SlopeAdjust()
{
	var x-slope, z-slope;
	while(TRUE)
		{
			x-slope=get ATAN (((get GROUND_HEIGHT(get PIECE_XZ(rear_point))) - (get GROUND_HEIGHT(get PIECE_XZ(front_point)))),((get XZ_HYPOT( ((get PIECE_XZ(rear_point)) - (get PIECE_XZ(front_point)))))));
			z-slope=get ATAN (((get GROUND_HEIGHT(get PIECE_XZ(right_point))) - (get GROUND_HEIGHT(get PIECE_XZ(left_point)))),((get XZ_HYPOT( ((get PIECE_XZ(right_point)) - (get PIECE_XZ(left_point)))))));
			turn body to x-axis x-slope speed <300>;
			turn body to z-axis z-slope speed <300>;
			sleep 400;
		}
		return(0);
}

EmitBubbles()
{
	while(TRUE)
	{
		sleep 400;
		if(OverWater == 1)
		{	
			emit-sfx HOVER_WATERCLOUD from base;
		}
	}
}

//weapon 1 -----------------------------------------------------------------

RestoreAfterDelay()
{
	sleep 5000;
	turn turret to y-axis <0.000000> speed <55.000000>;
	turn turret to x-axis <0.000000> speed <30.000000>;
}

AimWeapon1(heading, pitch)
{
	signal SIG_AIM1;
	set-signal-mask SIG_AIM1;
	turn turret to y-axis heading speed <160.000000>;
	turn turret to x-axis <0.000000> - pitch speed <160.000000>;
    wait-for-turn turret around y-axis;
	wait-for-turn turret around x-axis;
    start-script RestoreAfterDelay(); 
    return (1);
}

FireWeapon1()
{
		emit-sfx MERMEOTH_FLARE from emit_gun;
		emit-sfx GROUNDFLASH from emit_groundflash;
		call-script lua_CreateLightMe(emit_gun, 96, 255, 0, 96);
		sleep 200;
		call-script lua_DestroyLightMe();
		return(1);
}

AimFromWeapon1(piecenum)
{
		piecenum = turret;
}

QueryWeapon1(piecenum)
{
		piecenum = emit_gun;
}

AimWeapon2(heading, pitch)
{
    return (1);
}

FireWeapon2()
{
		return(1);
}

AimFromWeapon2(piecenum)
{
		piecenum = base;
}

QueryWeapon2(piecenum)
{
		piecenum = base;
}


Create()
{
	hide body;
	hide turret_base;
	hide turret;
	hide sleeve;

	//////////////////////////////////START BUILD CYCLE
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 100;
	}

	show body;
	show turret_base;
	show turret;
	show sleeve;

	start-script SmokeUnit();
	start-script EmitBubbles();
	start-script CheckWaterDepth();
	start-script SlopeAdjust();
	start-script Upanddown();
}

Killed(severity, corpsetype)
{
		sleep 200;
		emit-sfx BOOM from base;		
		explode turret type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP;
		explode sleeve type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP;
		return (0);
}
