#include "basic_spring_stuff.h"

piece base, chest, pelvis, rthigh, lthigh, lleg, rleg, rfoot,lfoot, luparm, lloarm, ruparm, rloarm, skull, head, lhand, lthumb, rhand, rthumb, staff, emit, emit_pentagram, buildpoint, empty;


static-var statechg_DesiredState, statechg_StateChanging, ISBUILDING, RandomNumber2;

#define SIG_ACTIVATE			2
#define KNEEDOWNSPEED <200>
#define BUILDING_NECROMANCER	1024+0
#define PENTAGRAM				1025+0
#define SPIKES_NECROMANCER		1026+0

// Factory Stuff //////////////////////////
BuildingAnimation()
{
	while (TRUE)
	{
		if( isbuilding == 1 )
		{
			emit-sfx PENTAGRAM from emit_pentagram;
			sleep 1300;
		}
	sleep 10;
	}
}

BuildingAnimation2()
{
	while (TRUE)
	{
		if( isbuilding == 1 )
		{
			sleep 100;
		}
	sleep 10;
	}
}

activatescr()
{
	if( TRUE )
	{
		sleep 307;
	}
	sleep 17;
}

deactivatescr()
{
	if( TRUE )
	{
		sleep 388;
	}
	sleep 20;
}

OpenYard()
{
	set YARD_OPEN to 1;
	while( !get YARD_OPEN )
	{
		set BUGGER_OFF to 1;
		sleep 1500;
		set YARD_OPEN to 1;
	}
	set BUGGER_OFF to 0;
}

CloseYard()
{
	set YARD_OPEN to 0;
	while( get YARD_OPEN )
	{
		set BUGGER_OFF to 1;
		sleep 1500;
		set YARD_OPEN to 0;
	}
	set BUGGER_OFF to 0;
}

Go()
{
	call-script activatescr();
	call-script OpenYard();
	set INBUILDSTANCE to 1;
}

Stop()
{
	set INBUILDSTANCE to 0;
	call-script CloseYard();
	call-script deactivatescr();
	sleep 200;
}

InitState()
{
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState == 0 )
		{
			call-script Go();
			currentstate = 0;
		}
		if( statechg_DesiredState == 1 )
		{
			call-script Stop();
			currentstate = 1;
		}
	}
	statechg_StateChanging = FALSE;
}

QueryNanoPiece(piecenum)
{	piecenum = base;	}

Activate()
{
	signal SIG_ACTIVATE;
	start-script RequestState(0);
}

Deactivate()
{
	signal SIG_ACTIVATE;
	set-signal-mask SIG_ACTIVATE;
	set-signal-mask 0;
	start-script RequestState(1);
}

StartBuilding()
{	
	isbuilding = 1;
}

StopBuilding()
{
	isbuilding = 0;
	sleep 200;
}

QueryBuildInfo(piecenum)
{	piecenum = buildpoint;	}

SweetSpot(piecenum)
{	piecenum = base;	}

///////////////////////////////////////////

Glowingstaff()
{
	while (TRUE)
	{
		if (ISBUILDING)
		{		
			emit-sfx BUILDING_NECROMANCER from emit;
		}
		if (!ISBUILDING)
		{		
			emit-sfx SPIKES_NECROMANCER from emit;
		}		
		sleep 50;
	}
}

///////////////////////////////////////////

Create()
{
	turn emit_pentagram to x-axis <-90> now;

	//////////////////////////////////START BUILD CYCLE
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 200;
	}
	/////////////////////////////////END BUILD CYCLE

	start-script Glowingstaff();
	
	move pelvis to y-axis [-2] speed KNEEDOWNSPEED*25;
	turn lthigh to x-axis <-73> speed KNEEDOWNSPEED;
	turn lleg to x-axis <72> speed KNEEDOWNSPEED;
	turn rleg to x-axis <72> speed KNEEDOWNSPEED;	
	turn rfoot to x-axis <53> speed KNEEDOWNSPEED;
	turn luparm to x-axis <-88> speed KNEEDOWNSPEED;
	turn lloarm to x-axis <70> speed KNEEDOWNSPEED;
	turn head to x-axis <35> speed KNEEDOWNSPEED;
	turn ruparm to x-axis <-20> speed KNEEDOWNSPEED;	
	turn ruparm to y-axis <70> speed KNEEDOWNSPEED;	
	turn ruparm to z-axis <20> speed KNEEDOWNSPEED;
	turn rloarm to y-axis <50> speed KNEEDOWNSPEED;	
	turn rloarm to z-axis <65> speed KNEEDOWNSPEED;				
	sleep 600;
	
	call-script InitState();
	start-script BuildingAnimation();
	start-script BuildingAnimation2();
}
  
Killed(severity, corpsetype)
{
	explode staff type FALL | EXPLODE_ON_HIT | BITMAP;
	return(0);
}